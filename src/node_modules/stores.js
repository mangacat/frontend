async function post(endpoint, data = {}, headers = { 'Content-Type': 'application/json' }) {
	const r = await fetch(endpoint, {
		method: 'POST',
		body: JSON.stringify(data),
		headers
	})
	return await r.json()
}

async function get(endpoint) {
	const r = await fetch(endpoint, { method: 'GET' })
	return await r.json()
}
  
const session = () => {
	let store
  
	return {
		set(sessionStore) {
			store = sessionStore
		},

		async login(credentials) {
			const response = await post(`auth/login`, credentials)
			if (response.user) store.update(state => ({ ...state, user: response.user }))
			return response
		},
        
		async logout() {
			const response = await post(`auth/logout`)
			store.update(state => ({ ...state, user: null }))
			return response
		},

		async register(user) {
			const response = await post(`auth/signup`, user)
			return response
		},

		async update() {
			const response = await get(`auth/me`)
			if (response.user) store.update(state => ({ ...state, user: response.user }))
			return response
		}
	}
}
  
export const userSession = session()

import { writable } from 'svelte/store'
export const nav_height = writable(0)

export const notify = writable()